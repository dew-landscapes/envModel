[{"path":"https://acanthiza.github.io/envModel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nigel Willoughby. Author, maintainer.","code":""},{"path":"https://acanthiza.github.io/envModel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Willoughby N (2025). envModel: Model Clusters Function Environmental Variables. R package version 0.0.0.9000, https://github.com/dew-landscapes/envModel.","code":"@Manual{,   title = {envModel: Model Clusters as a Function of Environmental Variables},   author = {Nigel Willoughby},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/dew-landscapes/envModel}, }"},{"path":"https://acanthiza.github.io/envModel/index.html","id":"envmodel-model-floristic-clusters-as-a-function-of-environmental-variables","dir":"","previous_headings":"","what":"Model Clusters as a Function of Environmental Variables","title":"Model Clusters as a Function of Environmental Variables","text":"goal envModel help prepare data run models (currently random forest) predict group membership function environmental variables. Reduce correlated ‘unimportant’ environmental variables, run quick random forest runs many clusterings outputting confusion matrix, choose area clustering space ‘good’ model run random forest, iteratively adding trees results stabilise iterations.","code":""},{"path":"https://acanthiza.github.io/envModel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model Clusters as a Function of Environmental Variables","text":"envModel CRAN. can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dew-landscapes/envModel\")"},{"path":"https://acanthiza.github.io/envModel/index.html","id":"contents-of-envmodel","dir":"","previous_headings":"","what":"Contents of envModel","title":"Model Clusters as a Function of Environmental Variables","text":"following functions data sets provided envModel.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/get_conf_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate diagnostics — get_conf_metrics","title":"Calculate diagnostics — get_conf_metrics","text":"Takes vectors truth predicted cases returns range yardstick metrics.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/get_conf_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate diagnostics — get_conf_metrics","text":"","code":"get_conf_metrics(pred_df, truth_vec = NULL, pred_vec = NULL)"},{"path":"https://acanthiza.github.io/envModel/reference/get_conf_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate diagnostics — get_conf_metrics","text":"pred_df Dataframe truth predicted classes case. truth_vec Vector true classes. pred_vec Vector predicted classes.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/get_conf_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate diagnostics — get_conf_metrics","text":"Tibble metrics.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_env_clust_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Add explanatory (environmental) variables to 'site' dataframe. — make_env_clust_df","title":"Add explanatory (environmental) variables to 'site' dataframe. — make_env_clust_df","text":"Add explanatory (environmental) variables 'site' dataframe.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_env_clust_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add explanatory (environmental) variables to 'site' dataframe. — make_env_clust_df","text":"","code":"make_env_clust_df(   df,   clust_col = \"cluster\",   context = \"cell\",   min_sites = min_abs_sites,   df_env,   add_clust = NULL,   add_clust_col = \"cluster\",   add_env,   env_cols,   set_min = FALSE )"},{"path":"https://acanthiza.github.io/envModel/reference/make_env_clust_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add explanatory (environmental) variables to 'site' dataframe. — make_env_clust_df","text":"df Dataframe context 'cluster' columns. clust_col Name cluster column. context Name columns describing context. min_sites Minimum number sites preferred cluster. df_env Dataframe 'site' associated env values floristic 'sites'. add_clust additional clusters (.e. clusters generated floristics land cover 'clusters') add_clust_col Character name column add_clust 'clusters'. add_env Dataframe 'site' associated env values additionalClusters 'sites'. env_cols Names columns containing env variables. set_min Filter clusters 'sites' >= minsites","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_env_clust_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add explanatory (environmental) variables to 'site' dataframe. — make_env_clust_df","text":"Dataframe context columns, clustCol envCols rows dfenv addenv.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_env_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate correlation matrix and select variables to remove — make_env_corr","title":"Generate correlation matrix and select variables to remove — make_env_corr","text":"Generate correlation matrix select variables remove","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_env_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate correlation matrix and select variables to remove — make_env_corr","text":"","code":"make_env_corr(   env_df,   env_cols,   remove = TRUE,   thresh = 0.95,   always_remove = c(\"lat\", \"long\"),   always_keep = c(\"prec\", \"temp\") )"},{"path":"https://acanthiza.github.io/envModel/reference/make_env_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate correlation matrix and select variables to remove — make_env_corr","text":"env_df Dataframe environmental variables env_cols Numeric character vector defining columns env_df contain variables test correlation. remove Logical. Remove variables correlated thresh. Correlation found via caret::findCorrelation(). thresh Numeric. Threshold correlation value variable removed. always_remove Character vector. string vector, matched, always removed (even correlated). always_keep Character vector. string vector, matched, removed (even correlated).","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_env_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate correlation matrix and select variables to remove — make_env_corr","text":"list elements itemize","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Run random forest, returning only diagnostic values. — make_rf_diagnostics","title":"Run random forest, returning only diagnostic values. — make_rf_diagnostics","text":"Run random forest, returning diagnostic values.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run random forest, returning only diagnostic values. — make_rf_diagnostics","text":"","code":"make_rf_diagnostics(   env_df,   clust_col = \"cluster\",   folds = 3L,   reps = 5L,   trees = 999,   down_sample = TRUE,   range_m = as.integer(seq(20000L, 100000L, length.out = reps)),   set_min = FALSE,   mlr3_cv_method = \"repeated_cv\",   coords = c(\"long\", \"lat\"),   crs_df = 4283 )"},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run random forest, returning only diagnostic values. — make_rf_diagnostics","text":"env_df Dataframe clusters environmental columns. clust_col Character. Name column cluster membership. folds Numeric. many folds use cross-validation? reps Numeric. many repeats cross-validation? trees Numeric. num.trees parameter mlr3::lrn() (random classification forest using ranger::ranger() package ranger). down_sample Logical. TRUE, sample.fraction argument ranger::ranger() set minimum number sites one cluster divided total number sites. range_m Numeric. distance metres (regardless unit reference system input data) block size(s) using blockCV::spatialBlock(). reps > 1, equivalent number range_m values required ensure folds different repetitions. repeated_spcv_block. needed using spatial cross validation. set_min FALSE numeric. numeric, classes clust_col less set_min cases filtered. mlr3_cv_method Method use mlr3::rsmp() (character, e.g. \"repeated_cv\" \"repeated_spcv_block\". coords Character vector length 2. Names columns env_df x y coordinates. needed using spatial cross validation. crs_df Coordinate reference system coords. Passed crs argument sf::st_as_sf(). needed using spatial cross validation.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Run random forest, usually returning only diagnostic values. — make_rf_diagnostics_old","title":"Run random forest, usually returning only diagnostic values. — make_rf_diagnostics_old","text":"Random forest run via caret::train.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run random forest, usually returning only diagnostic values. — make_rf_diagnostics_old","text":"","code":"make_rf_diagnostics_old(   df,   clust_col = \"cluster\",   env_cols,   trees = 999,   folds = 3,   reps = 5,   tune_length = NULL,   save_rf = NULL )"},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run random forest, usually returning only diagnostic values. — make_rf_diagnostics_old","text":"df Dataframe clusters, context environmental columns. clust_col Character. Name column cluster membership. env_cols Character. Name columns environmental data. trees Numeric. many trees forest? folds Numeric. many folds use repeated cross-validation. reps Numeric. many reps use repeated cross-validation. tune_length Numeric. Passed caret::train argument tuneLength. save_rf Character. File name saving train object (.rds).","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_old.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run random forest, usually returning only diagnostic values. — make_rf_diagnostics_old","text":"Tibble (row) diagnostics","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_spatialcv.html","id":null,"dir":"Reference","previous_headings":"","what":"Run random forest, returning only diagnostic values from spatial cross validation. — make_rf_diagnostics_spatialcv","title":"Run random forest, returning only diagnostic values from spatial cross validation. — make_rf_diagnostics_spatialcv","text":"Random forest run via randomForest::randomForest().","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_spatialcv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run random forest, returning only diagnostic values from spatial cross validation. — make_rf_diagnostics_spatialcv","text":"","code":"make_rf_diagnostics_spatialcv(   env_df,   clust_col = \"cluster\",   folds = 3L,   reps = 5L,   range_min = 20000,   range_max = 1e+05,   coords = c(\"long\", \"lat\"),   crs_df = 4283,   crs_analysis = 3577,   ... )"},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_diagnostics_spatialcv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run random forest, returning only diagnostic values from spatial cross validation. — make_rf_diagnostics_spatialcv","text":"env_df Dataframe clusters environmental columns. clust_col Character. Name column cluster membership. folds Numeric. many folds use cross-validation? reps Numeric. many repeats cross-validation? range_min, range_max Numeric. Metres. Minimum maximum grid sizes spatial tiles. Reps made using range <- seq(range_min, range_max , length.= reps) coords Character vector length 2. Names columns env_df x y coordinates. crs_df Coordinate reference system coords. Passed crs argument sf::st_as_sf(). ... passed make_rf_good().","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_good.html","id":null,"dir":"Reference","previous_headings":"","what":"Iteratively add trees to random forest until predictions stabilise — make_rf_good","title":"Iteratively add trees to random forest until predictions stabilise — make_rf_good","text":"Iteratively add trees random forest predictions stabilise","code":""},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_good.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iteratively add trees to random forest until predictions stabilise — make_rf_good","text":"","code":"make_rf_good(   env_df,   clust_col = \"cluster\",   env_names,   trees_start = 499,   trees_add = 249,   trees_max = 9999,   rf_cores = 1,   use_mtry = NULL,   set_min = FALSE,   accept_delta = 0.995,   accept_run = 3,   internal_metrics = TRUE,   do_imp = FALSE,   keep_rf = FALSE,   out_file = NULL,   save_res = FALSE,   do_gc = TRUE,   ... )"},{"path":"https://acanthiza.github.io/envModel/reference/make_rf_good.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iteratively add trees to random forest until predictions stabilise — make_rf_good","text":"env_df Dataframe clust_col, site_col columns env_names. clust_col Character. Name columns clusters. env_names Character. Name environmental variables (e.g. names(stack_list)). trees_start Number trees first random forest run. trees_add Number trees add subsequent run. trees_max Maximum number trees random forest. rf_cores Number cores use parallel processing. use_mtry mtry value randomForest::randomForest() call. NULL generated (lengthy) call caret::train() tune grid .mtry = 1:floor(sqrt(length(env_names)). set_min FALSE numeric. numeric, classes clust_col less set_min rows filtered accept_delta proportion change runs acceptable? accept_run many forests (row) need beat accept_delta? internal_metrics TRUE test data format env_df. do_imp Logical. Passed importance argument randomForest::randomForest(). keep_rf Logical. true, randomForest object included output. Defaults FALSE save memory. out_file Optional name file save results. save_res FALSE folder path. path provided, constant columns env_df used generate file name, metrics saved folder path file name. do_gc Logical. Run gc() results available objects removed.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://acanthiza.github.io/envModel/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://acanthiza.github.io/envModel/reference/reduce_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce number of environmental variables — reduce_env","title":"Reduce number of environmental variables — reduce_env","text":"Given data frame environmental variables, flag correlated, /important variables precursor analysis. Importance taken variable importance result randomForest::randomForest(). Thus deterministic can vary runs.","code":""},{"path":"https://acanthiza.github.io/envModel/reference/reduce_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce number of environmental variables — reduce_env","text":"","code":"reduce_env(   env_df,   env_cols,   y_col = \"pa\",   y_col_factor = TRUE,   imp_col = \"1\",   thresh_corr = 0.9,   quant_rf_imp = NULL,   remove_always = c(\"lat\", \"long\"),   keep_always = NULL )"},{"path":"https://acanthiza.github.io/envModel/reference/reduce_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce number of environmental variables — reduce_env","text":"env_df Dataframe environmental variables env_cols Numeric character vector defining columns env_df contain variables test correlation. Correlation found via caret::findCorrelation(). y_col Character. Name column env_df test 'important' variables via randomForest::randomForest(). used quant_rf_imp NULL. y_col_factor Logical. y_col considered factor randomForest::randomForest()? Thus classification rather regression. used quant_rf_imp NULL. imp_col Character. Name column result call randomForest::importance() use deciding 'importance' variable. used quant_rf_imp NULL. thresh_corr Numeric NULL. Threshold correlation value variable flagged correlated. Set NULL skip removal correlated variables. quant_rf_imp Numeric. Quantile variable flagged important. Set NULL skip removal variables low random forest importance. remove_always Character. matches always removed (even correlated). keep_always Character vector. string vector, matched, removed (even correlated).","code":""},{"path":"https://acanthiza.github.io/envModel/reference/reduce_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce number of environmental variables — reduce_env","text":"list elements itemize","code":""},{"path":"https://acanthiza.github.io/envModel/reference/reduce_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce number of environmental variables — reduce_env","text":"","code":"# env variables, presence and background points code from: # https://rspatial.org/sdm/3_sdm_absence-background.html#absence-and-background-points  # setup library(predicts) #> Error in library(predicts): there is no package called ‘predicts’ f <- system.file(\"ex/bio.tif\", package=\"predicts\")  # env variables predictors <- rast(f) #> Error in rast(f): could not find function \"rast\" predictors #> Error: object 'predictors' not found  # presences file <- paste(system.file(package=\"predicts\"), \"/ex/bradypus.csv\", sep=\"\") bradypus <- read.table(file,  header=TRUE,  sep=',') #> Warning: cannot open file '/ex/bradypus.csv': No such file or directory #> Error in file(file, \"rt\"): cannot open the connection presvals <- extract(predictors, bradypus[,-1])[-1] #> Error in extract(predictors, bradypus[, -1]): could not find function \"extract\" presvals$pa <- 1 #> Error: object 'presvals' not found  # backgrounds backgr <- spatSample(predictors, 500, \"random\", as.points=TRUE, na.rm=TRUE) #> Error in spatSample(predictors, 500, \"random\", as.points = TRUE, na.rm = TRUE): could not find function \"spatSample\" absvals <- values(backgr) #> Error in values(backgr): could not find function \"values\" absvals$pa <- 0 #> Error: object 'absvals' not found  # presences + background pb <- rbind(presvals, absvals) #> Error: object 'presvals' not found  # find correlated variables result <- reduce_env(pb                      , env_cols = names(predictors)                      , thresh_corr = 0.9                      ) #> Error: object 'predictors' not found  names(result) #> Error: object 'result' not found  result$remove_corr #> Error: object 'result' not found  result$remove_rf #> Error: object 'result' not found  result$keep #> Error: object 'result' not found  # find 'unimportant' variables result <- reduce_env(pb                      , env_cols = names(predictors)                      , y_col = \"pa\"                      , thresh_corr = NULL                      , quant_rf_imp = 0.1                      ) #> Error: object 'predictors' not found  names(result) #> Error: object 'result' not found  result$remove_corr #> Error: object 'result' not found  result$remove_rf #> Error: object 'result' not found  result$keep #> Error: object 'result' not found  # use both result <- reduce_env(pb                      , env_cols = names(predictors)                      , y_col = \"pa\"                      , thresh_corr = 0.95                      , quant_rf_imp = 0.2                      ) #> Error: object 'predictors' not found  names(result) #> Error: object 'result' not found  result$remove_corr #> Error: object 'result' not found  result$remove_rf #> Error: object 'result' not found  result$keep #> Error: object 'result' not found"}]
